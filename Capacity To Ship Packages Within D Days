class Solution {
    bool capacity(vector<int>& weights, int mid,int days){
        int n=weights.size();
        int curr_days=1,load=0;
        for(int i=0;i<n;i++){
            if((weights[i]+load)>mid){
                curr_days+=1;
                load=weights[i];
                if (curr_days > days) return false;
            }
            else{
                load+=weights[i];
            }
        }
        return true;
    }
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int n=weights.size();
        int low=*max_element(weights.begin(),weights.end());
        int high=accumulate(weights.begin(),weights.end(),0);
        while(low<=high){
            int mid=(low+high)/2;
            if(capacity(weights,mid,days)){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
