class Solution {
    bool possible(vector<int>& nums, int threshold, int mid) {
        int cnt = 0;
        for (int num : nums) {
            cnt += ceil((double)num / mid);
            if (cnt > threshold) return false;
        }
        return cnt <= threshold;
    }
public:
    int smallestDivisor(vector<int>& nums, int threshold) {
        int low=1,high=*max_element(nums.begin(),nums.end());
        while(low<=high){
            int mid=(low+high)/2;
            if(possible(nums,threshold,mid)){
               high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        return low;
    }
};
